name: Deploy Angular to Nginx

on:
  push:
    branches: [ "master" ]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install deps
        run: |
          set -euxo pipefail
          npm ci

      - name: Build Angular (prod)
        run: |
          set -euxo pipefail
          npx ng build --configuration production
          echo "Top-level dist contents:" && ls -la dist
          echo "Browser subtree (first 100 lines):" && ls -la dist/frontend/browser | head -n 100
          echo "Disk usage:" && du -sh dist/frontend/browser || true

      - name: Copy files via rsync over SSH
        uses: burnett01/rsync-deployments@v7.0.2
        with:
          switches: -avzrlptgoD --delete --progress
          path: dist/frontend/browser/
          remote_path: ${{ secrets.TARGET_DIR }}/
          remote_host: ${{ secrets.SSH_HOST }}
          remote_user: ${{ secrets.SSH_USER }}
          remote_key: ${{ secrets.SSH_KEY }}

      - name: Fix permissions, inspect remote & reload Nginx
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            set -euxo pipefail
            echo "Listing target dir before perms:" && ls -la ${{ secrets.TARGET_DIR }} | head -n 40 || true
            sudo chown -R ${{ secrets.SSH_USER }}:${{ secrets.SSH_USER }} ${{ secrets.TARGET_DIR }}
            find ${{ secrets.TARGET_DIR }} -type d -exec chmod 755 {} \;
            find ${{ secrets.TARGET_DIR }} -type f -exec chmod 644 {} \;
            echo "Listing target dir after perms:" && ls -la ${{ secrets.TARGET_DIR }} | head -n 40 || true
            test -f ${{ secrets.TARGET_DIR }}/index.html && echo "index.html OK" || (echo "index.html NOT FOUND" && exit 1)
            sudo nginx -t
            sudo systemctl reload nginx
            # Optional: try local curl (may fail if firewall blocks external)
            command -v curl && curl -I http://localhost || true

      - name: (Optional) External HTTP check
        if: ${{ !cancelled() }}
        run: |
          set -euxo pipefail
          # Basic external reachability test (may fail if port 80 closed). Ignore failure.
          curl -I --max-time 10 http://${{ secrets.SSH_HOST }} || echo "HTTP check skipped/failed"
